// test.py 이어서 작업 완료

// Data Transfer 구성
클라이언트 데이터 -> 서버. MQTT를 이용한 데이터 전송

MQTT 방식
정보 발행 -> 브로커(서버 역할도 함) -> 구독중인 상대에 전달
서버, 클라이언트 둘 다 발행/구독 가능
브로커는 발행된 정보를 보고 구독중인 곳에 전달

우리의 경우
라즈베리파이 -> 브로커 -> Process 테이블

MQTT 브로커 설치
https://mosquitto.org/download/
http://slproweb.com/products/Win32OpenSSL.html

서비스 앱에서 모스키토 브로커 -> 시작 --> 컴 키면 바로 동작

방화벽 해제(인바운드 1883포트 개방)

핑 확인(vnc터미널에서)
>>> ping 210.119.12.93
핑안되는경우 인바운드 규칙에서 파일 및 프린터 공유 ICMPv4-IN -> 규칙사용

텔넷 설치
>>> sudo apt-get install telnet
>>> telnet 210.119.12.93 1883

안될시
모스키토 브로커 멈추고
관리자 권한으로 mosquitto.conf 열기(notepad++)
215줄 #listener -> listener 1883
512줄 #allow_anonymous false -> allow_anonymous true
으로 수정 하고
다시 브로커

MQTT 메세지 확인하기 위해
MQTT Explorer 설치
http://mqtt-explorer.com/

explorer에서도 cmd에서도 메세지 전송 가능
>>> mosquitto_pub.exe -h 210.119.12.93 -p 1883 -t "factory1/machine1/temp" -m "10000"

check_publist_app.py 생성(test.py 내용 복붙)

mqtt 라이브러리 설치
>>> pip install paho-mqtt

check_publist_app.py 마저 작성